name: PyInstaller Build

on:
  push:
    branches:
      - main 
  pull_request:
    branches:
      - main
  release:
    types: [created]
  create_tag:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            artifact_name: pn532_cli_release_linux
          - os: windows-latest
            artifact_name: pn532_cli_release_windows
          - os: macos-latest
            artifact_name: pn532_cli_release_macos

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r script/requirements.txt
        pip install pyinstaller

    - name: Run PyInstaller
      run: |
        pyinstaller script/pyinstaller.spec

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.artifact_name }}
        path: dist/

  upload_release_asset:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: dist/
        asset_name: ${{ matrix.artifact_name }}
        asset_content_type: application/zip