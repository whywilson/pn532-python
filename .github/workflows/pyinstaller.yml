name: PyInstaller Build

on:
  push:
    branches:
      - main 
  pull_request:
    branches:
      - main
  release:
    types: [created]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            artifact_name: pn532_cli_release_linux
          - os: windows-latest
            artifact_name: pn532_cli_release_windows
          - os: macos-latest
            artifact_name: pn532_cli_release_macos

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r script/requirements.txt
        pip install pyinstaller

    - name: Run PyInstaller
      run: |
        pyinstaller script/pyinstaller.spec

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.artifact_name }}
        path: dist/

    - name: Get latest tag
      id: get_tag
      shell: bash
      run: echo ::set-output name=tag::$(git describe --tags `git rev-list --tags --max-count=1`)

    - name: Create new tag
      id: new_tag
      shell: bash
      run: |
        NEW_TAG=$(echo ${{ steps.get_tag.outputs.tag }} | awk -F. -v OFS=. '{$NF += 1 ; print}')
        echo ::set-output name=new_tag::$NEW_TAG

    - name: Create Release
      if: github.ref == 'refs/heads/main'
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.new_tag.outputs.new_tag }}
        release_name: Release ${{ steps.new_tag.outputs.new_tag }}
        draft: false
        prerelease: false